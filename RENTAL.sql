CREATE TABLE LOCATIONS (
   LOCATION_ID int NOT NULL,
   ADRESS varchar(255) NOT NULL,
  PHONENUMBER varchar(20)NOT NULL,
  EMIAL varchar(60) NOT NULL,
  PRIMARY KEY (LOCATION_ID)
);

CREATE TABLE RESTRICTIONS (
  RESTRICTIONS_ID INT,
  KM_LIMIT INT NULL, 
  TANK tinyint NULL,
  PRIMARY KEY (RESTRICTIONS_ID)
);

CREATE TABLE PRICES (
  PRICES_ID INT,
 -- MODEL varchar(60) NOT NULL,
  WEEK_RATE MONEY NOT NULL,
  DAYLY_RATE MONEY NOT NULL,
  DIFF_LOCATION_FEE MONEY NOT NULL,
  PRIMARY KEY (PRICES_ID)
);



CREATE TABLE COSTUMER (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255) NOT NULL,
    Age int,
    CHECK (Age>=18),
  PHONENUMBER varchar(20)NOT NULL,
  EMIAL varchar(255) NULL,
  DRIVERLISENCE varchar(30) NOT NULL UNIQUE,
  CITY INT  NOT NULL,
  
  PRIMARY KEY (ID),
  FOREIGN KEY (CITY) REFERENCES LOCATIONS(LOCATION_ID)
 
);

CREATE TABLE EMPLOYEE (
    ID int NOT NULL,
    LastName varchar(255) NOT NULL,
    FirstName varchar(255) NOT NULL,
    Age int,
    CHECK (Age>=18),
  PHONENUMBER varchar(20)NOT NULL,
  EMIAL varchar(255) NULL,
    LOCATION_ID INT  NOT NULL,
  PRIMARY KEY (ID),
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID),
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID),
   
);

CREATE TABLE CARS (
    VIN nchar(6) NOT NULL,
    MAKE varchar(30) NOT NULL,
    MODEL varchar(60) NOT NULL,
    --LOCATION_ID int NOT NULL,
    YEARS smallint NOT NULL,
    TYPE varchar(30) NOT NULL,
    PRICE_ID INT NOT NULL,
   EMPLOYEE_ID INT NOT NULL,
    KM int NOT NULL,
	KM_MECHANIC INT NOT NULL ,
	DATE_MECHANIC DATE
   PRIMARY KEY (VIN),
   FOREIGN KEY (PRICE_ID) REFERENCES PRICES(PRICES_ID),
   FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID)
);


CREATE TABLE RENTALRESERVATION (
  RESERVATION_ID VARCHAR(6),
   VIN nchar(6) NOT NULL,
   CREATION_DATE datetime  NOT NULL,
  PICK_UP_DATE date NOT NULL,
  DROP_DATE datetime  NOT NULL,
  PICK_UP_LOCATION INT NOT NULL,
  DROP_LOCATION INT NOT NULL,
  CARD  varchar(60) NOT NULL,
  COSTUMER_ID INT NOT NULL,
  --PRICE_ID INT NOT NULL,
  DISTANCE INT NOT NULL,
  RESTRICTIONS_ID INT,
  CHECK (PICK_UP_DATE<DROP_DATE),
  PRIMARY KEY (RESERVATION_ID),
  FOREIGN KEY (PICK_UP_LOCATION) REFERENCES LOCATIONS(LOCATION_ID),
  FOREIGN KEY (DROP_LOCATION) REFERENCES LOCATIONS(LOCATION_ID),
  FOREIGN KEY (COSTUMER_ID) REFERENCES COSTUMER(ID),
  FOREIGN KEY (RESTRICTIONS_ID) REFERENCES RESTRICTIONS(RESTRICTIONS_ID),
  FOREIGN KEY (VIN) REFERENCES CARS(VIN)
);

